/*
 * Copyright (c) 2020 Self-Order Kiosk
 */
package admin;

public class AdminFrame extends javax.swing.JFrame {

  /**
   * Creates new form AdminFrame
   */
  public AdminFrame() {
    initComponents();
    app.Global.setAppIcon(this);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    btgTheme = new javax.swing.ButtonGroup();
    tabbedPane = new javax.swing.JTabbedPane();
    pnlOrders = new javax.swing.JPanel();
    scpOrders = new javax.swing.JScrollPane();
    tblOrders = new javax.swing.JTable();
    pnlItems = new javax.swing.JPanel();
    scpItems = new javax.swing.JScrollPane();
    tblItems = new javax.swing.JTable();
    pnlItemFields = new javax.swing.JPanel();
    lblItemImagePreview = new javax.swing.JLabel();
    lblItemName = new javax.swing.JLabel();
    lblItemPrice = new javax.swing.JLabel();
    lblItemImage = new javax.swing.JLabel();
    lblItemCategory = new javax.swing.JLabel();
    txtItemName = new javax.swing.JTextField();
    txtItemPrice = new javax.swing.JTextField();
    txtItemImage = new javax.swing.JTextField();
    cmbItemCategory = new javax.swing.JComboBox<>();
    pnlItemActions = new javax.swing.JPanel();
    btnItemRefresh = new javax.swing.JButton();
    btnItemSave = new javax.swing.JButton();
    btnItemNew = new javax.swing.JButton();
    btnItemDelete = new javax.swing.JButton();
    pnlCategories = new javax.swing.JPanel();
    scpCategories = new javax.swing.JScrollPane();
    tblCategories = new javax.swing.JTable();
    pnlCategoryFields = new javax.swing.JPanel();
    lblCategoryName = new javax.swing.JLabel();
    txtCategoryName = new javax.swing.JTextField();
    pnlCategoryActions = new javax.swing.JPanel();
    btnCategoryRefresh = new javax.swing.JButton();
    btnCategorySave = new javax.swing.JButton();
    btnCategoryNew = new javax.swing.JButton();
    btnCategoryDelete = new javax.swing.JButton();
    pnlUsers = new javax.swing.JPanel();
    scpUsers = new javax.swing.JScrollPane();
    tblUsers = new javax.swing.JTable();
    pnlUserFields = new javax.swing.JPanel();
    lblUserName = new javax.swing.JLabel();
    lblUserUsername = new javax.swing.JLabel();
    lblUserPassword = new javax.swing.JLabel();
    txtUserName = new javax.swing.JTextField();
    txtUserUsername = new javax.swing.JTextField();
    txtUserPassword = new javax.swing.JTextField();
    pnlUserActions = new javax.swing.JPanel();
    btnUserRefresh = new javax.swing.JButton();
    btnUserSave = new javax.swing.JButton();
    btnUserNew = new javax.swing.JButton();
    btnUserDelete = new javax.swing.JButton();
    pnlSettings = new javax.swing.JPanel();
    lblSettingTheme = new javax.swing.JLabel();
    radThemeLight = new javax.swing.JRadioButton();
    radThemeDark = new javax.swing.JRadioButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Admin");
    setName(""); // NOI18N
    setPreferredSize(new java.awt.Dimension(720, 600));

    pnlOrders.setLayout(new java.awt.BorderLayout());

    tblOrders.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"1", "30", "2020-09-29"}
      },
      new String [] {
        "ID", "Preperation Time", "Date"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    scpOrders.setViewportView(tblOrders);

    pnlOrders.add(scpOrders, java.awt.BorderLayout.CENTER);

    tabbedPane.addTab("Orders", pnlOrders);

    pnlItems.setLayout(new java.awt.GridBagLayout());

    tblItems.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"1", "Krusty Burger", "$ 1.99", "Meal Combos"}
      },
      new String [] {
        "ID", "Name", "Price", "Category"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tblItems.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
    scpItems.setViewportView(tblItems);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    pnlItems.add(scpItems, gridBagConstraints);

    java.awt.GridBagLayout pnlItemFieldsLayout = new java.awt.GridBagLayout();
    pnlItemFieldsLayout.columnWidths = new int[] {150, 100, 300};
    pnlItemFieldsLayout.rowHeights = new int[] {60, 0, 60};
    pnlItemFields.setLayout(pnlItemFieldsLayout);

    lblItemImagePreview.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblItemImagePreview.setText("Preview");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 5;
    gridBagConstraints.ipadx = 20;
    gridBagConstraints.ipady = 20;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    pnlItemFields.add(lblItemImagePreview, gridBagConstraints);

    lblItemName.setLabelFor(txtItemName);
    lblItemName.setText("Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pnlItemFields.add(lblItemName, gridBagConstraints);

    lblItemPrice.setLabelFor(txtItemPrice);
    lblItemPrice.setText("Price");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pnlItemFields.add(lblItemPrice, gridBagConstraints);

    lblItemImage.setLabelFor(txtItemImage);
    lblItemImage.setText("Image");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pnlItemFields.add(lblItemImage, gridBagConstraints);

    lblItemCategory.setLabelFor(cmbItemCategory);
    lblItemCategory.setText("Category");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pnlItemFields.add(lblItemCategory, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlItemFields.add(txtItemName, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlItemFields.add(txtItemPrice, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlItemFields.add(txtItemImage, gridBagConstraints);

    cmbItemCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Main Meal" }));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlItemFields.add(cmbItemCategory, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlItems.add(pnlItemFields, gridBagConstraints);

    pnlItemActions.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 20));

    btnItemRefresh.setText("Refresh");
    pnlItemActions.add(btnItemRefresh);

    btnItemSave.setText("Save");
    pnlItemActions.add(btnItemSave);

    btnItemNew.setText("New");
    pnlItemActions.add(btnItemNew);

    btnItemDelete.setText("Delete");
    pnlItemActions.add(btnItemDelete);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    pnlItems.add(pnlItemActions, gridBagConstraints);

    tabbedPane.addTab("Items", pnlItems);

    pnlCategories.setLayout(new java.awt.GridBagLayout());

    tblCategories.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"1", "Meal Combos"}
      },
      new String [] {
        "ID", "Category"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    scpCategories.setViewportView(tblCategories);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    pnlCategories.add(scpCategories, gridBagConstraints);

    java.awt.GridBagLayout pnlCategoryFieldsLayout = new java.awt.GridBagLayout();
    pnlCategoryFieldsLayout.columnWidths = new int[] {100, 300};
    pnlCategoryFieldsLayout.rowHeights = new int[] {60};
    pnlCategoryFields.setLayout(pnlCategoryFieldsLayout);

    lblCategoryName.setLabelFor(txtCategoryName);
    lblCategoryName.setText("Category");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pnlCategoryFields.add(lblCategoryName, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlCategoryFields.add(txtCategoryName, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlCategories.add(pnlCategoryFields, gridBagConstraints);

    pnlCategoryActions.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 20));

    btnCategoryRefresh.setText("Refresh");
    pnlCategoryActions.add(btnCategoryRefresh);

    btnCategorySave.setText("Save");
    pnlCategoryActions.add(btnCategorySave);

    btnCategoryNew.setText("New");
    pnlCategoryActions.add(btnCategoryNew);

    btnCategoryDelete.setText("Delete");
    btnCategoryDelete.setToolTipText("");
    pnlCategoryActions.add(btnCategoryDelete);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
    pnlCategories.add(pnlCategoryActions, gridBagConstraints);

    tabbedPane.addTab("Categories", pnlCategories);

    pnlUsers.setLayout(new java.awt.GridBagLayout());

    tblUsers.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"1", "SpongeBob SquarePants", "bob"}
      },
      new String [] {
        "ID", "Name", "Username"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    scpUsers.setViewportView(tblUsers);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    pnlUsers.add(scpUsers, gridBagConstraints);

    java.awt.GridBagLayout pnlUserFieldsLayout = new java.awt.GridBagLayout();
    pnlUserFieldsLayout.columnWidths = new int[] {100, 300};
    pnlUserFieldsLayout.rowHeights = new int[] {60, 0, 60};
    pnlUserFields.setLayout(pnlUserFieldsLayout);

    lblUserName.setLabelFor(txtUserName);
    lblUserName.setText("Name");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pnlUserFields.add(lblUserName, gridBagConstraints);

    lblUserUsername.setLabelFor(txtUserUsername);
    lblUserUsername.setText("Username");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pnlUserFields.add(lblUserUsername, gridBagConstraints);

    lblUserPassword.setLabelFor(txtUserPassword);
    lblUserPassword.setText("Password");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pnlUserFields.add(lblUserPassword, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlUserFields.add(txtUserName, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlUserFields.add(txtUserUsername, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlUserFields.add(txtUserPassword, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    pnlUsers.add(pnlUserFields, gridBagConstraints);

    pnlUserActions.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 20));

    btnUserRefresh.setText("Refresh");
    pnlUserActions.add(btnUserRefresh);

    btnUserSave.setText("Save");
    pnlUserActions.add(btnUserSave);

    btnUserNew.setText("New");
    pnlUserActions.add(btnUserNew);

    btnUserDelete.setText("Delete");
    pnlUserActions.add(btnUserDelete);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
    pnlUsers.add(pnlUserActions, gridBagConstraints);

    tabbedPane.addTab("Users", pnlUsers);

    lblSettingTheme.setFont(new java.awt.Font("SF Pro Text", 1, 17)); // NOI18N
    lblSettingTheme.setText("Theme");
    lblSettingTheme.setAlignmentY(0.0F);

    btgTheme.add(radThemeLight);
    radThemeLight.setSelected(true);
    radThemeLight.setText("Light");
    radThemeLight.setAlignmentY(0.0F);
    radThemeLight.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        radThemeLightItemStateChanged(evt);
      }
    });

    btgTheme.add(radThemeDark);
    radThemeDark.setText("Dark");
    radThemeDark.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        radThemeDarkItemStateChanged(evt);
      }
    });

    javax.swing.GroupLayout pnlSettingsLayout = new javax.swing.GroupLayout(pnlSettings);
    pnlSettings.setLayout(pnlSettingsLayout);
    pnlSettingsLayout.setHorizontalGroup(
      pnlSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(pnlSettingsLayout.createSequentialGroup()
        .addGap(17, 17, 17)
        .addGroup(pnlSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(pnlSettingsLayout.createSequentialGroup()
            .addComponent(radThemeLight)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(radThemeDark))
          .addComponent(lblSettingTheme))
        .addContainerGap(554, Short.MAX_VALUE))
    );
    pnlSettingsLayout.setVerticalGroup(
      pnlSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(pnlSettingsLayout.createSequentialGroup()
        .addGap(17, 17, 17)
        .addComponent(lblSettingTheme)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(pnlSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(radThemeLight)
          .addComponent(radThemeDark))
        .addContainerGap(482, Short.MAX_VALUE))
    );

    tabbedPane.addTab("Settings", pnlSettings);

    getContentPane().add(tabbedPane, java.awt.BorderLayout.CENTER);

    getAccessibleContext().setAccessibleName("");

    pack();
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

  private void radThemeLightItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radThemeLightItemStateChanged
    setTheme(evt, "light");
  }//GEN-LAST:event_radThemeLightItemStateChanged

  private void radThemeDarkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radThemeDarkItemStateChanged
    setTheme(evt, "dark");
  }//GEN-LAST:event_radThemeDarkItemStateChanged

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set default theme */
    app.Global.setDefaultTheme();

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> {
      new AdminFrame().setVisible(true);
    });
  }

  private void setTheme(java.awt.event.ItemEvent evt, String name) {
    if (evt.getStateChange() == 1) {
      // IntelliJTheme.install(AdminFrame.class.getResourceAsStream("/app/" + name + ".theme.json"));

      if ("light".equals(name)) {
        app.Global.setDefaultTheme();
      } else {
        com.formdev.flatlaf.FlatDarculaLaf.install();
      }

      for (java.awt.Window window : javax.swing.JFrame.getWindows()) {
        javax.swing.SwingUtilities.updateComponentTreeUI(window);
      }
    }
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.ButtonGroup btgTheme;
  private javax.swing.JButton btnCategoryDelete;
  private javax.swing.JButton btnCategoryNew;
  private javax.swing.JButton btnCategoryRefresh;
  private javax.swing.JButton btnCategorySave;
  private javax.swing.JButton btnItemDelete;
  private javax.swing.JButton btnItemNew;
  private javax.swing.JButton btnItemRefresh;
  private javax.swing.JButton btnItemSave;
  private javax.swing.JButton btnUserDelete;
  private javax.swing.JButton btnUserNew;
  private javax.swing.JButton btnUserRefresh;
  private javax.swing.JButton btnUserSave;
  private javax.swing.JComboBox<String> cmbItemCategory;
  private javax.swing.JLabel lblCategoryName;
  private javax.swing.JLabel lblItemCategory;
  private javax.swing.JLabel lblItemImage;
  private javax.swing.JLabel lblItemImagePreview;
  private javax.swing.JLabel lblItemName;
  private javax.swing.JLabel lblItemPrice;
  private javax.swing.JLabel lblSettingTheme;
  private javax.swing.JLabel lblUserName;
  private javax.swing.JLabel lblUserPassword;
  private javax.swing.JLabel lblUserUsername;
  private javax.swing.JPanel pnlCategories;
  private javax.swing.JPanel pnlCategoryActions;
  private javax.swing.JPanel pnlCategoryFields;
  private javax.swing.JPanel pnlItemActions;
  private javax.swing.JPanel pnlItemFields;
  private javax.swing.JPanel pnlItems;
  private javax.swing.JPanel pnlOrders;
  private javax.swing.JPanel pnlSettings;
  private javax.swing.JPanel pnlUserActions;
  private javax.swing.JPanel pnlUserFields;
  private javax.swing.JPanel pnlUsers;
  private javax.swing.JRadioButton radThemeDark;
  private javax.swing.JRadioButton radThemeLight;
  private javax.swing.JScrollPane scpCategories;
  private javax.swing.JScrollPane scpItems;
  private javax.swing.JScrollPane scpOrders;
  private javax.swing.JScrollPane scpUsers;
  private javax.swing.JTabbedPane tabbedPane;
  private javax.swing.JTable tblCategories;
  private javax.swing.JTable tblItems;
  private javax.swing.JTable tblOrders;
  private javax.swing.JTable tblUsers;
  private javax.swing.JTextField txtCategoryName;
  private javax.swing.JTextField txtItemImage;
  private javax.swing.JTextField txtItemName;
  private javax.swing.JTextField txtItemPrice;
  private javax.swing.JTextField txtUserName;
  private javax.swing.JTextField txtUserPassword;
  private javax.swing.JTextField txtUserUsername;
  // End of variables declaration//GEN-END:variables
}
